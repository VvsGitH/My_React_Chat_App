{"version":3,"sources":["firebase/firebase.utils.js","components/message.component.jsx","pages/chatpage.component.jsx","components/header.component.jsx","pages/homepage.component.jsx","pages/signpage.component.jsx","pages/loginpage.component.jsx","App.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","firestore","signInWithGoogle","a","setPersistence","Auth","Persistence","SESSION","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithPopup","createNewUser","name","email","password","createUserWithEmailAndPassword","user","updateProfile","displayName","logIn","signInWithEmailAndPassword","Message","sender","content","time","isReceived","color","className","style","ChatPage","history","useState","newMsgContent","setNewMsgContent","messages","setMessages","moreMessages","setMoreMessages","colorHueDictionary","setColorHueDictionary","scrollerDummy","useRef","useEffect","unsubFromFirestore","collection","orderBy","limit","onSnapshot","snapshot","console","log","newMsgs","docChanges","filter","change","type","forEach","msgWithId","id","doc","data","push","reverse","msgs","current","scrollIntoView","behavior","error","senders","map","msg","senderId","uniqueSenders","indx","indexOf","colorHueDistance","Math","ceil","length","colorSenderDict","i","sendMessage","event","preventDefault","trim","add","senderName","sentAt","Date","loadMoreMessages","oldDbMessages","where","get","empty","logOut","signOut","code","message","onClick","toDate","toLocaleString","ref","onSubmit","rows","placeholder","value","onInput","target","height","scrollHeight","Header","HomePage","isLoggedIn","SignPage","userName","setUserName","userEmail","setUserEmail","userPass","setUserPass","handleInput","handleUserCreation","window","location","reload","alert","onChange","required","LoginPage","handleLogIn","handleGoogleSignin","credentials","App","setIsLoggedIn","userInfo","setUserInfo","unsubFromAuth","onAuthStateChanged","userAuth","uid","exact","path","render","props","component","to","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.124f9e1f.chunk.js","sourcesContent":["import firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport 'firebase/firestore';\r\n\r\nconst firebaseConfig = {\r\n\tapiKey: 'AIzaSyCr-FYUZWwOEm1KPpk7hWS3oV1-BNEg96Q',\r\n\tauthDomain: 'my-chat-app-aa73c.firebaseapp.com',\r\n\tprojectId: 'my-chat-app-aa73c',\r\n\tstorageBucket: 'my-chat-app-aa73c.appspot.com',\r\n\tmessagingSenderId: '422748533719',\r\n\tappId: '1:422748533719:web:2fc9ec870dbeaf4bad9192',\r\n\tmeasurementId: 'G-ZVBXSF1QPL',\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\n// Authentication\r\nexport const auth = firebase.auth();\r\n\r\n// Database\r\nexport const firestore = firebase.firestore();\r\n\r\n// UTILIS -> Google Auth\r\nexport async function signInWithGoogle() {\r\n\ttry {\r\n\t\t// Setting persistance\r\n\t\tawait auth.setPersistence(firebase.auth.Auth.Persistence.SESSION);\r\n\t\t// Configuring provider\r\n\t\tlet provider = new firebase.auth.GoogleAuthProvider();\r\n\t\tprovider.setCustomParameters({ prompt: 'select_account' });\r\n\t\t// Signing in\r\n\t\tawait auth.signInWithPopup(provider);\r\n\t} catch (error) {\r\n\t\tthrow error;\r\n\t}\r\n}\r\n\r\n// UTILS -> Create New User\r\nexport async function createNewUser(name, email, password) {\r\n\ttry {\r\n\t\t// Setting persistance\r\n\t\tawait auth.setPersistence(firebase.auth.Auth.Persistence.SESSION);\r\n\t\t// Create new user with email and password\r\n\t\tlet { user } = await auth.createUserWithEmailAndPassword(email, password);\r\n\t\t// Adding the name to the user profile\r\n\t\tawait user.updateProfile({\r\n\t\t\tdisplayName: name,\r\n\t\t});\r\n\t} catch (error) {\r\n\t\tthrow error;\r\n\t}\r\n}\r\n\r\n// UTILS -> Log in\r\nexport async function logIn(email, password) {\r\n\ttry {\r\n\t\tawait auth.setPersistence(firebase.auth.Auth.Persistence.SESSION);\r\n\t\tawait auth.signInWithEmailAndPassword(email, password);\r\n\t} catch (error) {\r\n\t\tthrow error;\r\n\t}\r\n}\r\n","import React from 'react';\r\n\r\nimport './message.style.css';\r\n\r\nconst Message = ({ sender, content, time, isReceived, color }) => {\r\n\treturn (\r\n\t\t<div className={'message ' + (isReceived ? 'received' : '')}>\r\n\t\t\t<h4 className='name' style={{ color: `hsl(${color}, 100%, 40%)` }}>\r\n\t\t\t\t{sender}\r\n\t\t\t</h4>\r\n\t\t\t<p className='content'>{content}</p>\r\n\t\t\t<time className='date'>{time}</time>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Message;\r\n","import React, { useEffect, useRef, useState } from 'react';\r\nimport Message from '../components/message.component';\r\nimport { auth, firestore } from '../firebase/firebase.utils';\r\n\r\nimport './chatpage.style.css';\r\n\r\nconst ChatPage = ({ user, history }) => {\r\n\tconst [newMsgContent, setNewMsgContent] = useState('');\r\n\tconst [messages, setMessages] = useState([]);\r\n\tconst [moreMessages, setMoreMessages] = useState([]);\r\n\tconst [colorHueDictionary, setColorHueDictionary] = useState([]);\r\n\r\n\t// Reference di un div vuoto alla fine della lista dei messaggi. Utile per lo scrolling automatico\r\n\tconst scrollerDummy = useRef();\r\n\r\n\t// Al caricamento del componente, viene fatta una iscrizione ad un listener del database, che aggiorna lo stato messages ogni volta che rileva un nuovo messaggio nel db\r\n\tuseEffect(() => {\r\n\t\tconst unsubFromFirestore = firestore\r\n\t\t\t.collection('messages/')\r\n\t\t\t.orderBy('sentAt', 'desc')\r\n\t\t\t.limit(25)\r\n\t\t\t.onSnapshot(\r\n\t\t\t\tsnapshot => {\r\n\t\t\t\t\tconsole.log('Updating the chat from db!');\r\n\t\t\t\t\t// Creo un array con solo i messaggi aggiunti rispetto all'ultimo snapshot\r\n\t\t\t\t\tlet newMsgs = [];\r\n\t\t\t\t\tsnapshot\r\n\t\t\t\t\t\t.docChanges()\r\n\t\t\t\t\t\t.filter(change => change.type === 'added')\r\n\t\t\t\t\t\t.forEach(change => {\r\n\t\t\t\t\t\t\tlet msgWithId = {\r\n\t\t\t\t\t\t\t\tid: change.doc.id,\r\n\t\t\t\t\t\t\t\t...change.doc.data(),\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\tnewMsgs.push(msgWithId);\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t// Metto i messaggi più recenti alla fine\r\n\t\t\t\t\tnewMsgs.reverse();\r\n\t\t\t\t\tsetMessages(msgs => [...msgs, ...newMsgs]);\r\n\t\t\t\t\t// La chat scorre in basso fino al nuovo messaggio\r\n\t\t\t\t\tscrollerDummy.current.scrollIntoView({ behavior: 'smooth' });\r\n\t\t\t\t},\r\n\t\t\t\terror => console.error(error)\r\n\t\t\t);\r\n\t\t// Annullo l'iscrizione al listener del database\r\n\t\treturn () => unsubFromFirestore();\r\n\t}, []);\r\n\r\n\t// Ogni volta che gli stati messages o moreMessages cambiano, viene creato un dizionario che assegna un colore (solo il valore Hue) ad ogni sender\r\n\tuseEffect(() => {\r\n\t\tlet senders = messages.map(msg => msg.senderId);\r\n\t\tsenders.push(...moreMessages.map(msg => msg.senderId)); // Combino i senders di messages e moreMessages\r\n\t\tlet uniqueSenders = senders.filter(\r\n\t\t\t(sender, indx) => senders.indexOf(sender) === indx\r\n\t\t);\r\n\t\t// H va da 0 a 359. Divido il range di colori in base al numero di senders presenti in chat\r\n\t\tlet colorHueDistance = Math.ceil(360 / uniqueSenders.length);\r\n\t\tlet colorSenderDict = {};\r\n\t\t// Creo il dizionario\r\n\t\tfor (let i = 0; i < uniqueSenders.length; i++) {\r\n\t\t\tcolorSenderDict[uniqueSenders[i]] = i * colorHueDistance;\r\n\t\t}\r\n\t\tsetColorHueDictionary(colorSenderDict);\r\n\t}, [messages, moreMessages]);\r\n\r\n\tconst handleChange = event => {\r\n\t\tevent.preventDefault();\r\n\t\tsetNewMsgContent(event.target.value);\r\n\t\t// Auto-resize\r\n\t\tevent.target.style.height = '100%';\r\n\t\tevent.target.style.height = event.target.scrollHeight + 'px';\r\n\t};\r\n\r\n\tconst sendMessage = async event => {\r\n\t\tevent.preventDefault();\r\n\t\tif (newMsgContent.trim() === '') {\r\n\t\t\tsetNewMsgContent('');\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t// Aggiungo i messaggi non vuoti al database\r\n\t\ttry {\r\n\t\t\tawait firestore.collection('messages/').add({\r\n\t\t\t\tsenderId: user.id,\r\n\t\t\t\tsenderName: user.name,\r\n\t\t\t\tcontent: newMsgContent,\r\n\t\t\t\tsentAt: new Date(),\r\n\t\t\t});\r\n\t\t\tsetNewMsgContent('');\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error('Error sending message: ', error);\r\n\t\t}\r\n\t};\r\n\r\n\tconst loadMoreMessages = async () => {\r\n\t\tlet oldDbMessages = [];\r\n\t\tlet snapshot = [];\r\n\t\ttry {\r\n\t\t\tconsole.log('Loading more messages from the db...');\r\n\t\t\t// Imposto la query in base alla data di invio dei messaggi. Tale data deve essere inferiore rispetto a quella del messaggio più vecchio presente nella chat: questo messaggio è presente inizialmente in messages e successivamente in moreMessages.\r\n\t\t\tif (moreMessages.length === 0) {\r\n\t\t\t\tsnapshot = await firestore\r\n\t\t\t\t\t.collection('messages/')\r\n\t\t\t\t\t.where('sentAt', '<', messages[0].sentAt)\r\n\t\t\t\t\t.orderBy('sentAt', 'desc')\r\n\t\t\t\t\t.limit(25)\r\n\t\t\t\t\t.get();\r\n\t\t\t} else {\r\n\t\t\t\tsnapshot = await firestore\r\n\t\t\t\t\t.collection('messages/')\r\n\t\t\t\t\t.where('sentAt', '<', moreMessages[0].sentAt)\r\n\t\t\t\t\t.orderBy('sentAt', 'desc')\r\n\t\t\t\t\t.limit(25)\r\n\t\t\t\t\t.get();\r\n\t\t\t}\r\n\t\t\t// Inserisco i messaggi del db in moreMessages. A differenza di messages, moreMessages è un array che viene caricato 25 messaggi per volta e i nuovi messaggi sono più vecchi dei precedenti. Quindi devo mettere mettere i 'nuovi' messaggi sopra quell già presenti.\r\n\t\t\tif (!snapshot.empty) {\r\n\t\t\t\tsnapshot.forEach(msg => {\r\n\t\t\t\t\tlet msgWithId = {\r\n\t\t\t\t\t\tid: msg.id,\r\n\t\t\t\t\t\t...msg.data(),\r\n\t\t\t\t\t};\r\n\t\t\t\t\toldDbMessages.push(msgWithId);\r\n\t\t\t\t});\r\n\t\t\t\toldDbMessages.reverse().push(...moreMessages);\r\n\t\t\t\tsetMoreMessages(oldDbMessages);\r\n\t\t\t} else {\r\n\t\t\t\tconsole.log('No more messages');\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error('Error during the load of old messages: ', error);\r\n\t\t}\r\n\t};\r\n\r\n\tconst logOut = async () => {\r\n\t\ttry {\r\n\t\t\tawait auth.signOut();\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error('Error during sign-out: ', error.code, error.message);\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className='chatpage'>\r\n\t\t\t<header className='top-bar'>\r\n\t\t\t\t<h2 className='logo' onClick={() => history.push('/TheChat_App')}>\r\n\t\t\t\t\tTHE CHAT\r\n\t\t\t\t</h2>\r\n\r\n\t\t\t\t<span className='sign-out' onClick={logOut}>\r\n\t\t\t\t\tSign Out\r\n\t\t\t\t</span>\r\n\t\t\t</header>\r\n\r\n\t\t\t<div className='chat-container'>\r\n\t\t\t\t<div className='chat-slider'>\r\n\t\t\t\t\t<button className='load-btn' onClick={loadMoreMessages}>\r\n\t\t\t\t\t\t....MORE...\r\n\t\t\t\t\t</button>\r\n\t\t\t\t\t{moreMessages.map(msg => (\r\n\t\t\t\t\t\t<Message\r\n\t\t\t\t\t\t\tkey={msg.id}\r\n\t\t\t\t\t\t\tsender={msg.senderName}\r\n\t\t\t\t\t\t\tcontent={msg.content}\r\n\t\t\t\t\t\t\ttime={msg.sentAt.toDate().toLocaleString()}\r\n\t\t\t\t\t\t\tisReceived={msg.senderId !== user.id}\r\n\t\t\t\t\t\t\tcolor={colorHueDictionary[msg.senderId]}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t))}\r\n\t\t\t\t\t{messages.map(msg => (\r\n\t\t\t\t\t\t<Message\r\n\t\t\t\t\t\t\tkey={msg.id}\r\n\t\t\t\t\t\t\tsender={msg.senderName}\r\n\t\t\t\t\t\t\tcontent={msg.content}\r\n\t\t\t\t\t\t\ttime={msg.sentAt.toDate().toLocaleString()}\r\n\t\t\t\t\t\t\tisReceived={msg.senderId !== user.id}\r\n\t\t\t\t\t\t\tcolor={colorHueDictionary[msg.senderId]}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t))}\r\n\t\t\t\t\t<div ref={scrollerDummy}></div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t\t<form className='chat-controls' onSubmit={sendMessage}>\r\n\t\t\t\t<textarea\r\n\t\t\t\t\tclassName='text-area'\r\n\t\t\t\t\tname='input'\r\n\t\t\t\t\trows='1'\r\n\t\t\t\t\tplaceholder='Write your message!'\r\n\t\t\t\t\tvalue={newMsgContent}\r\n\t\t\t\t\tonInput={handleChange}\r\n\t\t\t\t/>\r\n\t\t\t\t<button className='btn' type='submit'>\r\n\t\t\t\t\t<i className='fa fa-paper-plane'></i>\r\n\t\t\t\t</button>\r\n\t\t\t</form>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default ChatPage;\r\n","import React from 'react';\r\nimport './header.style.css';\r\n\r\nconst Header = ({ history }) => {\r\n\treturn (\r\n\t\t<header className='header'>\r\n\t\t\t<h1 className='title' onClick={() => history.push('/TheChat_App')}>\r\n\t\t\t\tThe Chat\r\n\t\t\t</h1>\r\n\t\t</header>\r\n\t);\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport Header from '../components/header.component';\r\nimport { auth } from '../firebase/firebase.utils';\r\n\r\nimport './homepage.style.css';\r\n\r\nconst HomePage = ({ isLoggedIn, history }) => {\r\n\tconst logOut = async () => {\r\n\t\ttry {\r\n\t\t\tawait auth.signOut();\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error('Error during sign-out: ', error.code, error.message);\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Header history={history} />\r\n\r\n\t\t\t<div className='homepage card flex-column'>\r\n\t\t\t\t<h2>\r\n\t\t\t\t\tWelcome to <span className='logo'>The Chat</span>\r\n\t\t\t\t</h2>\r\n\t\t\t\t{isLoggedIn ? (\r\n\t\t\t\t\t<div className='container'>\r\n\t\t\t\t\t\t<p>Start chatting with your friends</p>\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\tclassName='btn'\r\n\t\t\t\t\t\t\tonClick={() => history.push('/TheChat_App/chat')}>\r\n\t\t\t\t\t\t\tSTART\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t<p className='link' onClick={logOut}>\r\n\t\t\t\t\t\t\tLog out\r\n\t\t\t\t\t\t</p>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<div className='container'>\r\n\t\t\t\t\t\t<p>Please login</p>\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\tclassName='btn'\r\n\t\t\t\t\t\t\tonClick={() => history.push('/TheChat_App/login')}>\r\n\t\t\t\t\t\t\tLOG IN\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t<p\r\n\t\t\t\t\t\t\tclassName='link'\r\n\t\t\t\t\t\t\tonClick={() => history.push('/TheChat_App/signin')}>\r\n\t\t\t\t\t\t\tAre you new? Register\r\n\t\t\t\t\t\t</p>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default HomePage;\r\n","import React, { useState } from 'react';\r\nimport { createNewUser } from '../firebase/firebase.utils';\r\n\r\nimport './signpage.style.css';\r\n\r\nimport Header from '../components/header.component';\r\n\r\nconst SignPage = ({ history }) => {\r\n\tconst [userName, setUserName] = useState('');\r\n\tconst [userEmail, setUserEmail] = useState('');\r\n\tconst [userPass, setUserPass] = useState('');\r\n\r\n\tconst handleInput = event => {\r\n\t\tevent.preventDefault();\r\n\t\tswitch (event.target.name) {\r\n\t\t\tcase 'name':\r\n\t\t\t\tsetUserName(event.target.value);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'email':\r\n\t\t\t\tsetUserEmail(event.target.value);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'password':\r\n\t\t\t\tsetUserPass(event.target.value);\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tconsole.error('Something went wrong with the input');\r\n\t\t}\r\n\t};\r\n\r\n\tconst handleUserCreation = async event => {\r\n\t\tevent.preventDefault();\r\n\t\ttry {\r\n\t\t\tawait createNewUser(userName, userEmail, userPass);\r\n\t\t\thistory.push('/TheChat_App');\r\n\t\t\t// onAuthStateChange() viene evocato prima che createNewUser() aggiorni l'utente con il suo username.\r\n\t\t\t// Quindi in questo momento auth.diplayName è corretto, ma lo stato user di App ha name:null.\r\n\t\t\t// Devo dunque aggiornare la pagina in modo che onAuthStateChange() venga chiamato di nuovo e imposti lo stato user in modo corretto.\r\n\t\t\twindow.location.reload();\r\n\t\t} catch (error) {\r\n\t\t\talert('Something went wrong, try again');\r\n\t\t\tconsole.error(\r\n\t\t\t\t'An error occurred during registration: ',\r\n\t\t\t\terror.code,\r\n\t\t\t\terror.message\r\n\t\t\t);\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Header history={history} />\r\n\r\n\t\t\t<div className='signpage card flex-column'>\r\n\t\t\t\t<h3>Sign in with your email and password</h3>\r\n\t\t\t\t<form className='sign-form' onSubmit={handleUserCreation}>\r\n\t\t\t\t\t<div className='container'>\r\n\t\t\t\t\t\t<label>Full Name</label>\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\t\tplaceholder='insert your name'\r\n\t\t\t\t\t\t\tname='name'\r\n\t\t\t\t\t\t\tvalue={userName}\r\n\t\t\t\t\t\t\tonChange={handleInput}\r\n\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='container'>\r\n\t\t\t\t\t\t<label className='email-label'>Email</label>\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\ttype='email'\r\n\t\t\t\t\t\t\tplaceholder='insert your email'\r\n\t\t\t\t\t\t\tname='email'\r\n\t\t\t\t\t\t\tvalue={userEmail}\r\n\t\t\t\t\t\t\tonChange={handleInput}\r\n\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='container'>\r\n\t\t\t\t\t\t<label>Password</label>\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\ttype='password'\r\n\t\t\t\t\t\t\tplaceholder='insert your password'\r\n\t\t\t\t\t\t\tname='password'\r\n\t\t\t\t\t\t\tvalue={userPass}\r\n\t\t\t\t\t\t\tonChange={handleInput}\r\n\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<button className='btn' type='submit'>\r\n\t\t\t\t\t\tSIGN IN\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</form>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default SignPage;\r\n","import React, { useState } from 'react';\r\nimport { signInWithGoogle, logIn } from '../firebase/firebase.utils';\r\n\r\nimport './loginpage.style.css';\r\n\r\nimport Header from '../components/header.component';\r\n\r\nconst LoginPage = ({ history }) => {\r\n\tconst [userEmail, setUserEmail] = useState('');\r\n\tconst [userPass, setUserPass] = useState('');\r\n\r\n\tconst handleInput = event => {\r\n\t\tevent.preventDefault();\r\n\t\tswitch (event.target.name) {\r\n\t\t\tcase 'email':\r\n\t\t\t\tsetUserEmail(event.target.value);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'password':\r\n\t\t\t\tsetUserPass(event.target.value);\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tconsole.error('Something is wrong with the input');\r\n\t\t}\r\n\t};\r\n\r\n\tconst handleLogIn = async event => {\r\n\t\tevent.preventDefault();\r\n\t\ttry {\r\n\t\t\tawait logIn(userEmail, userPass);\r\n\t\t\thistory.push('/TheChat_App');\r\n\t\t} catch (error) {\r\n\t\t\talert('Credential are wrong');\r\n\t\t\tconsole.error('Error during sign-in: ', error.code, error.message);\r\n\t\t}\r\n\t};\r\n\r\n\tconst handleGoogleSignin = async () => {\r\n\t\ttry {\r\n\t\t\tawait signInWithGoogle();\r\n\t\t\thistory.push('/TheChat_App');\r\n\t\t} catch (error) {\r\n\t\t\talert('Something went wrong, try again!');\r\n\t\t\tconsole.error(\r\n\t\t\t\t'Error in Google signin: ',\r\n\t\t\t\terror.code,\r\n\t\t\t\terror.message,\r\n\t\t\t\terror.credentials\r\n\t\t\t);\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Header history={history} />\r\n\r\n\t\t\t<div className='loginpage card flex-column'>\r\n\t\t\t\t<div className='option'>\r\n\t\t\t\t\t<h3>Login with your email and password</h3>\r\n\t\t\t\t\t<form onSubmit={handleLogIn}>\r\n\t\t\t\t\t\t<label>Email</label>\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\ttype='email'\r\n\t\t\t\t\t\t\tplaceholder='insert your email'\r\n\t\t\t\t\t\t\tname='email'\r\n\t\t\t\t\t\t\tvalue={userEmail}\r\n\t\t\t\t\t\t\tonChange={handleInput}\r\n\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<label>Password</label>\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\ttype='password'\r\n\t\t\t\t\t\t\tplaceholder='insert your password'\r\n\t\t\t\t\t\t\tname='password'\r\n\t\t\t\t\t\t\tvalue={userPass}\r\n\t\t\t\t\t\t\tonChange={handleInput}\r\n\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<button className='btn' type='submit'>\r\n\t\t\t\t\t\t\tLOG IN\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</form>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<hr />\r\n\r\n\t\t\t\t<div className='option'>\r\n\t\t\t\t\t<h3>Login with Google</h3>\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\tclassName='btn btn-google'\r\n\t\t\t\t\t\ttype='button'\r\n\t\t\t\t\t\tonClick={handleGoogleSignin}>\r\n\t\t\t\t\t\tLOG IN WITH GOOGLE\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default LoginPage;\r\n","import React, { useState, useEffect } from 'react';\nimport { Redirect, Route } from 'react-router';\nimport { auth } from './firebase/firebase.utils';\nimport './App.css';\n\nimport ChatPage from './pages/chatpage.component';\nimport HomePage from './pages/homepage.component';\nimport SignPage from './pages/signpage.component';\nimport LoginPage from './pages/loginpage.component';\n\nfunction App() {\n\tconst [isLoggedIn, setIsLoggedIn] = useState(false);\n\tconst [userInfo, setUserInfo] = useState({ id: '', name: '' });\n\n\tuseEffect(() => {\n\t\tconst unsubFromAuth = auth.onAuthStateChanged(userAuth => {\n\t\t\tconsole.log('Auth state changed: ', userAuth);\n\t\t\tif (userAuth) {\n\t\t\t\tconsole.log('A new user logged in');\n\t\t\t\tsetUserInfo({\n\t\t\t\t\tid: userAuth.uid,\n\t\t\t\t\tname: userAuth.displayName,\n\t\t\t\t});\n\t\t\t\tsetIsLoggedIn(true);\n\t\t\t} else {\n\t\t\t\tsetIsLoggedIn(false);\n\t\t\t\tsetUserInfo({ id: '', name: '' });\n\t\t\t}\n\t\t});\n\n\t\treturn () => unsubFromAuth();\n\t}, []);\n\n\treturn (\n\t\t<div className='App'>\n\t\t\t<Route\n\t\t\t\texact\n\t\t\t\tpath='/TheChat_App'\n\t\t\t\trender={props => <HomePage {...props} isLoggedIn={isLoggedIn} />}\n\t\t\t/>\n\t\t\t<Route path='/TheChat_App/login' component={LoginPage} />\n\t\t\t<Route path='/TheChat_App/signin' component={SignPage} />\n\t\t\t<Route\n\t\t\t\tpath='/TheChat_App/chat'\n\t\t\t\trender={\n\t\t\t\t\tprops =>\n\t\t\t\t\t\tisLoggedIn ? (\n\t\t\t\t\t\t\t<ChatPage {...props} user={userInfo} />\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<Redirect to='/TheChat_App' />\n\t\t\t\t\t\t)\n\t\t\t\t\t//<ChatPage {...props} user={userInfo} />\n\t\t\t\t}\n\t\t\t/>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport './index.css';\n\nimport App from './App';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<BrowserRouter>\n\t\t\t<App />\n\t\t</BrowserRouter>\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n"],"sourceRoot":""}