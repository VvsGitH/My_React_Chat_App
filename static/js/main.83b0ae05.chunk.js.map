{"version":3,"sources":["firebase/firebase.utils.js","components/header.component.jsx","components/message.component.jsx","pages/chatpage.component.jsx","pages/homepage.component.jsx","pages/signpage.component.jsx","pages/loginpage.component.jsx","App.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","firestore","signInWithGoogle","a","setPersistence","Auth","Persistence","SESSION","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithPopup","createNewUser","name","email","password","createUserWithEmailAndPassword","user","updateProfile","displayName","logIn","signInWithEmailAndPassword","signOut","catch","error","console","code","message","Header","isChat","useLocation","pathname","className","to","onClick","Message","sender","content","time","isReceived","color","style","React","memo","ChatPage","useState","newMsgContent","setNewMsgContent","messages","setMessages","moreMessages","setMoreMessages","colorHueDictionary","setColorHueDictionary","scrollerDummy","useRef","useEffect","unsubFromFirestore","collection","orderBy","limit","onSnapshot","snapshot","log","newMsgs","docChanges","filter","change","type","forEach","msgWithId","id","doc","data","push","reverse","msgs","current","scrollIntoView","behavior","senders","map","msg","senderId","uniqueSenders","indx","indexOf","colorHueDistance","Math","ceil","length","colorSenderDict","i","sendMessage","event","preventDefault","trim","add","senderName","sentAt","Date","loadMoreMessages","oldDbMessages","where","get","empty","toDate","toLocaleString","ref","onSubmit","rows","placeholder","value","onInput","target","height","scrollHeight","HomePage","isLoggedIn","history","useHistory","SignPage","userName","setUserName","userEmail","setUserEmail","userPass","setUserPass","handleInput","handleUserCreation","window","location","reload","alert","onChange","required","LoginPage","handleLogIn","handleGoogleSignin","credentials","App","setIsLoggedIn","userInfo","setUserInfo","unsubFromAuth","onAuthStateChanged","userAuth","uid","exact","path","component","ReactDOM","render","StrictMode","basename","document","getElementById"],"mappings":"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","file":"static/js/main.83b0ae05.chunk.js","sourcesContent":["import firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport 'firebase/firestore';\r\n\r\nconst firebaseConfig = {\r\n\tapiKey: 'AIzaSyCr-FYUZWwOEm1KPpk7hWS3oV1-BNEg96Q',\r\n\tauthDomain: 'my-chat-app-aa73c.firebaseapp.com',\r\n\tprojectId: 'my-chat-app-aa73c',\r\n\tstorageBucket: 'my-chat-app-aa73c.appspot.com',\r\n\tmessagingSenderId: '422748533719',\r\n\tappId: '1:422748533719:web:2fc9ec870dbeaf4bad9192',\r\n\tmeasurementId: 'G-ZVBXSF1QPL',\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\n// Authentication\r\nexport const auth = firebase.auth();\r\n\r\n// Database\r\nexport const firestore = firebase.firestore();\r\n\r\n// UTILIS -> Google Auth\r\nexport async function signInWithGoogle() {\r\n\ttry {\r\n\t\t// Setting persistance\r\n\t\tawait auth.setPersistence(firebase.auth.Auth.Persistence.SESSION);\r\n\t\t// Configuring provider\r\n\t\tlet provider = new firebase.auth.GoogleAuthProvider();\r\n\t\tprovider.setCustomParameters({ prompt: 'select_account' });\r\n\t\t// Signing in\r\n\t\tawait auth.signInWithPopup(provider);\r\n\t} catch (error) {\r\n\t\tthrow error;\r\n\t}\r\n}\r\n\r\n// UTILS -> Create New User\r\nexport async function createNewUser(name, email, password) {\r\n\ttry {\r\n\t\t// Setting persistance\r\n\t\tawait auth.setPersistence(firebase.auth.Auth.Persistence.SESSION);\r\n\t\t// Create new user with email and password\r\n\t\tlet { user } = await auth.createUserWithEmailAndPassword(email, password);\r\n\t\t// Adding the name to the user profile\r\n\t\tawait user.updateProfile({\r\n\t\t\tdisplayName: name,\r\n\t\t});\r\n\t} catch (error) {\r\n\t\tthrow error;\r\n\t}\r\n}\r\n\r\n// UTILS -> Log in\r\nexport async function logIn(email, password) {\r\n\ttry {\r\n\t\tawait auth.setPersistence(firebase.auth.Auth.Persistence.SESSION);\r\n\t\tawait auth.signInWithEmailAndPassword(email, password);\r\n\t} catch (error) {\r\n\t\tthrow error;\r\n\t}\r\n}\r\n\r\n// UTILS -> Sign Out\r\nexport function signOut() {\r\n\tauth\r\n\t\t.signOut()\r\n\t\t.catch(error =>\r\n\t\t\tconsole.error('Error during sign-out: ', error.code, error.message)\r\n\t\t);\r\n}\r\n","import React from 'react';\r\nimport { useLocation, Link } from 'react-router-dom';\r\nimport { signOut } from '../firebase/firebase.utils';\r\nimport './header.style.css';\r\n\r\nconst Header = () => {\r\n\tconst location = useLocation();\r\n\tconst isChat = location.pathname === '/chat';\r\n\r\n\treturn (\r\n\t\t<header className={`header ${isChat ? 'reduced' : null}`}>\r\n\t\t\t<Link to='/' className='logo'>\r\n\t\t\t\tThe Chat\r\n\t\t\t</Link>\r\n\r\n\t\t\t{isChat ? (\r\n\t\t\t\t<button className='sign-out' onClick={signOut}>\r\n\t\t\t\t\tSign Out\r\n\t\t\t\t</button>\r\n\t\t\t) : null}\r\n\t\t</header>\r\n\t);\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\n\r\nimport './message.style.css';\r\n\r\nconst Message = ({ sender, content, time, isReceived, color }) => (\r\n\t<article className={'message ' + (isReceived ? 'received' : '')}>\r\n\t\t<h4 className='name' style={{ color: `hsl(${color}, 100%, 40%)` }}>\r\n\t\t\t{sender}\r\n\t\t</h4>\r\n\t\t<p className='content'>{content}</p>\r\n\t\t<time className='date'>{time}</time>\r\n\t</article>\r\n);\r\n\r\nexport default React.memo(Message);\r\n","import React, { useEffect, useRef, useState } from 'react';\r\nimport Message from '../components/message.component';\r\nimport { firestore } from '../firebase/firebase.utils';\r\n\r\nimport './chatpage.style.css';\r\n\r\nconst ChatPage = ({ user }) => {\r\n\tconst [newMsgContent, setNewMsgContent] = useState('');\r\n\tconst [messages, setMessages] = useState([]);\r\n\tconst [moreMessages, setMoreMessages] = useState([]);\r\n\tconst [colorHueDictionary, setColorHueDictionary] = useState([]);\r\n\r\n\t// Reference di un div vuoto alla fine della lista dei messaggi. Utile per lo scrolling automatico\r\n\tconst scrollerDummy = useRef();\r\n\r\n\t// Al caricamento del componente, viene fatta una iscrizione ad un listener del database, che aggiorna lo stato messages ogni volta che rileva un nuovo messaggio nel db\r\n\tuseEffect(() => {\r\n\t\tconst unsubFromFirestore = firestore\r\n\t\t\t.collection('messages/')\r\n\t\t\t.orderBy('sentAt', 'desc')\r\n\t\t\t.limit(25)\r\n\t\t\t.onSnapshot(\r\n\t\t\t\tsnapshot => {\r\n\t\t\t\t\tconsole.log('Updating the chat from db!');\r\n\t\t\t\t\t// Creo un array con solo i messaggi aggiunti rispetto all'ultimo snapshot\r\n\t\t\t\t\tlet newMsgs = [];\r\n\t\t\t\t\tsnapshot\r\n\t\t\t\t\t\t.docChanges()\r\n\t\t\t\t\t\t.filter(change => change.type === 'added')\r\n\t\t\t\t\t\t.forEach(change => {\r\n\t\t\t\t\t\t\tlet msgWithId = {\r\n\t\t\t\t\t\t\t\tid: change.doc.id,\r\n\t\t\t\t\t\t\t\t...change.doc.data(),\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\tnewMsgs.push(msgWithId);\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t// Metto i messaggi più recenti alla fine\r\n\t\t\t\t\tnewMsgs.reverse();\r\n\t\t\t\t\tsetMessages(msgs => [...msgs, ...newMsgs]);\r\n\t\t\t\t\t// La chat scorre in basso fino al nuovo messaggio\r\n\t\t\t\t\tscrollerDummy.current.scrollIntoView({ behavior: 'smooth' });\r\n\t\t\t\t},\r\n\t\t\t\terror => console.error(error)\r\n\t\t\t);\r\n\t\t// Annullo l'iscrizione al listener del database\r\n\t\treturn () => unsubFromFirestore();\r\n\t}, []);\r\n\r\n\t// Ogni volta che gli stati messages o moreMessages cambiano, viene creato un dizionario che assegna un colore (solo il valore Hue) ad ogni sender\r\n\tuseEffect(() => {\r\n\t\tlet senders = messages.map(msg => msg.senderId);\r\n\t\t// Combino i senders di messages e moreMessages\r\n\t\tsenders.push(...moreMessages.map(msg => msg.senderId));\r\n\t\t// Creo un array con tutti i sender, non ripetuti\r\n\t\tlet uniqueSenders = senders.filter(\r\n\t\t\t(sender, indx) => senders.indexOf(sender) === indx\r\n\t\t);\r\n\t\t// H va da 0 a 359. Divido il range di colori in base al numero di senders presenti in chat\r\n\t\tlet colorHueDistance = Math.ceil(360 / uniqueSenders.length);\r\n\t\tlet colorSenderDict = {};\r\n\t\t// Creo il dizionario\r\n\t\tfor (let i = 0; i < uniqueSenders.length; i++) {\r\n\t\t\tcolorSenderDict[uniqueSenders[i]] = i * colorHueDistance;\r\n\t\t}\r\n\t\tsetColorHueDictionary(colorSenderDict);\r\n\t}, [messages, moreMessages]);\r\n\r\n\tconst handleChange = event => {\r\n\t\tevent.preventDefault();\r\n\t\tsetNewMsgContent(event.target.value);\r\n\t\t// Auto-resize\r\n\t\tevent.target.style.height = '100%';\r\n\t\tevent.target.style.height = event.target.scrollHeight + 'px';\r\n\t};\r\n\r\n\tconst sendMessage = async event => {\r\n\t\tevent.preventDefault();\r\n\t\tif (newMsgContent.trim() === '') {\r\n\t\t\tsetNewMsgContent('');\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t// Aggiungo i messaggi non vuoti al database\r\n\t\ttry {\r\n\t\t\tawait firestore.collection('messages/').add({\r\n\t\t\t\tsenderId: user.id,\r\n\t\t\t\tsenderName: user.name,\r\n\t\t\t\tcontent: newMsgContent,\r\n\t\t\t\tsentAt: new Date(),\r\n\t\t\t});\r\n\t\t\tsetNewMsgContent('');\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error('Error sending message: ', error);\r\n\t\t}\r\n\t};\r\n\r\n\tconst loadMoreMessages = async () => {\r\n\t\tlet oldDbMessages = [];\r\n\t\tlet snapshot = [];\r\n\t\ttry {\r\n\t\t\tconsole.log('Loading more messages from the db...');\r\n\t\t\t// Imposto la query in base alla data di invio dei messaggi. Tale data deve essere inferiore rispetto a quella del messaggio più vecchio presente nella chat: questo messaggio è presente inizialmente in messages e successivamente in moreMessages.\r\n\t\t\tif (moreMessages.length === 0) {\r\n\t\t\t\tsnapshot = await firestore\r\n\t\t\t\t\t.collection('messages/')\r\n\t\t\t\t\t.where('sentAt', '<', messages[0].sentAt)\r\n\t\t\t\t\t.orderBy('sentAt', 'desc')\r\n\t\t\t\t\t.limit(25)\r\n\t\t\t\t\t.get();\r\n\t\t\t} else {\r\n\t\t\t\tsnapshot = await firestore\r\n\t\t\t\t\t.collection('messages/')\r\n\t\t\t\t\t.where('sentAt', '<', moreMessages[0].sentAt)\r\n\t\t\t\t\t.orderBy('sentAt', 'desc')\r\n\t\t\t\t\t.limit(25)\r\n\t\t\t\t\t.get();\r\n\t\t\t}\r\n\t\t\t// Inserisco i messaggi del db in moreMessages. A differenza di messages, moreMessages è un array che viene caricato 25 messaggi per volta e i nuovi messaggi sono più vecchi dei precedenti. Quindi devo mettere mettere i 'nuovi' messaggi sopra quell già presenti.\r\n\t\t\tif (!snapshot.empty) {\r\n\t\t\t\tsnapshot.forEach(msg => {\r\n\t\t\t\t\tlet msgWithId = {\r\n\t\t\t\t\t\tid: msg.id,\r\n\t\t\t\t\t\t...msg.data(),\r\n\t\t\t\t\t};\r\n\t\t\t\t\toldDbMessages.push(msgWithId);\r\n\t\t\t\t});\r\n\t\t\t\toldDbMessages.reverse().push(...moreMessages);\r\n\t\t\t\tsetMoreMessages(oldDbMessages);\r\n\t\t\t} else {\r\n\t\t\t\tconsole.log('No more messages');\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error('Error during the load of old messages: ', error);\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<main className='chatpage'>\r\n\t\t\t<section className='chat-container'>\r\n\t\t\t\t<div className='chat-slider'>\r\n\t\t\t\t\t<button className='load-btn' onClick={loadMoreMessages}>\r\n\t\t\t\t\t\t....MORE...\r\n\t\t\t\t\t</button>\r\n\t\t\t\t\t{moreMessages.map(msg => (\r\n\t\t\t\t\t\t<Message\r\n\t\t\t\t\t\t\tkey={msg.id}\r\n\t\t\t\t\t\t\tsender={msg.senderName}\r\n\t\t\t\t\t\t\tcontent={msg.content}\r\n\t\t\t\t\t\t\ttime={msg.sentAt.toDate().toLocaleString()}\r\n\t\t\t\t\t\t\tisReceived={msg.senderId !== user.id}\r\n\t\t\t\t\t\t\tcolor={colorHueDictionary[msg.senderId]}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t))}\r\n\t\t\t\t\t{messages.map(msg => (\r\n\t\t\t\t\t\t<Message\r\n\t\t\t\t\t\t\tkey={msg.id}\r\n\t\t\t\t\t\t\tsender={msg.senderName}\r\n\t\t\t\t\t\t\tcontent={msg.content}\r\n\t\t\t\t\t\t\ttime={msg.sentAt.toDate().toLocaleString()}\r\n\t\t\t\t\t\t\tisReceived={msg.senderId !== user.id}\r\n\t\t\t\t\t\t\tcolor={colorHueDictionary[msg.senderId]}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t))}\r\n\t\t\t\t\t<div ref={scrollerDummy}></div>\r\n\t\t\t\t</div>\r\n\t\t\t</section>\r\n\r\n\t\t\t<form className='chat-controls' onSubmit={sendMessage}>\r\n\t\t\t\t<textarea\r\n\t\t\t\t\tclassName='text-area'\r\n\t\t\t\t\tname='input'\r\n\t\t\t\t\trows='1'\r\n\t\t\t\t\tplaceholder='Write your message!'\r\n\t\t\t\t\tvalue={newMsgContent}\r\n\t\t\t\t\tonInput={handleChange}\r\n\t\t\t\t/>\r\n\t\t\t\t<button className='btn' type='submit'>\r\n\t\t\t\t\t<i className='fa fa-paper-plane'></i>\r\n\t\t\t\t</button>\r\n\t\t\t</form>\r\n\t\t</main>\r\n\t);\r\n};\r\n\r\nexport default ChatPage;\r\n","import React from 'react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { signOut } from '../firebase/firebase.utils';\r\n\r\nimport './homepage.style.css';\r\n\r\nconst HomePage = ({ isLoggedIn }) => {\r\n\tconst history = useHistory();\r\n\r\n\treturn (\r\n\t\t<main className='homepage'>\r\n\t\t\t<div className='card flex-column'>\r\n\t\t\t\t<h2>\r\n\t\t\t\t\tWelcome to <span className='logo'>The Chat</span>\r\n\t\t\t\t</h2>\r\n\t\t\t\t{isLoggedIn ? (\r\n\t\t\t\t\t<div className='container'>\r\n\t\t\t\t\t\t<p>Start chatting with your friends</p>\r\n\t\t\t\t\t\t<button className='btn' onClick={() => history.push('/chat')}>\r\n\t\t\t\t\t\t\tSTART\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t<button className='link' onClick={signOut}>\r\n\t\t\t\t\t\t\tLog out\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<div className='container'>\r\n\t\t\t\t\t\t<p>Please login</p>\r\n\t\t\t\t\t\t<button className='btn' onClick={() => history.push('/login')}>\r\n\t\t\t\t\t\t\tLOG IN\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t<Link to='/signin' className='link'>\r\n\t\t\t\t\t\t\tAre you new? Register\r\n\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t</main>\r\n\t);\r\n};\r\n\r\nexport default HomePage;\r\n","import React, { useState } from 'react';\r\nimport { createNewUser } from '../firebase/firebase.utils';\r\n\r\nimport './signpage.style.css';\r\n\r\nconst SignPage = ({ history }) => {\r\n\tconst [userName, setUserName] = useState('');\r\n\tconst [userEmail, setUserEmail] = useState('');\r\n\tconst [userPass, setUserPass] = useState('');\r\n\r\n\tconst handleInput = event => {\r\n\t\tevent.preventDefault();\r\n\t\tswitch (event.target.name) {\r\n\t\t\tcase 'name':\r\n\t\t\t\tsetUserName(event.target.value);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'email':\r\n\t\t\t\tsetUserEmail(event.target.value);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'password':\r\n\t\t\t\tsetUserPass(event.target.value);\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tconsole.error('Something went wrong with the input');\r\n\t\t}\r\n\t};\r\n\r\n\tconst handleUserCreation = async event => {\r\n\t\tevent.preventDefault();\r\n\t\ttry {\r\n\t\t\tawait createNewUser(userName, userEmail, userPass);\r\n\t\t\thistory.push('/');\r\n\t\t\t// onAuthStateChange() viene evocato prima che createNewUser() aggiorni l'utente con il suo username.\r\n\t\t\t// Quindi in questo momento auth.diplayName è corretto, ma lo stato user di App ha name:null.\r\n\t\t\t// Devo dunque aggiornare la pagina in modo che onAuthStateChange() venga chiamato di nuovo e imposti lo stato user in modo corretto.\r\n\t\t\twindow.location.reload();\r\n\t\t} catch (error) {\r\n\t\t\talert('Something went wrong, try again');\r\n\t\t\tconsole.error(\r\n\t\t\t\t'An error occurred during registration: ',\r\n\t\t\t\terror.code,\r\n\t\t\t\terror.message\r\n\t\t\t);\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<main className='signpage'>\r\n\t\t\t<div className='card flex-column'>\r\n\t\t\t\t<h3>Sign in with your email and password</h3>\r\n\t\t\t\t<form className='sign-form' onSubmit={handleUserCreation}>\r\n\t\t\t\t\t<div className='container'>\r\n\t\t\t\t\t\t<label>Full Name</label>\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\t\tplaceholder='insert your name'\r\n\t\t\t\t\t\t\tname='name'\r\n\t\t\t\t\t\t\tvalue={userName}\r\n\t\t\t\t\t\t\tonChange={handleInput}\r\n\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='container'>\r\n\t\t\t\t\t\t<label className='email-label'>Email</label>\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\ttype='email'\r\n\t\t\t\t\t\t\tplaceholder='insert your email'\r\n\t\t\t\t\t\t\tname='email'\r\n\t\t\t\t\t\t\tvalue={userEmail}\r\n\t\t\t\t\t\t\tonChange={handleInput}\r\n\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className='container'>\r\n\t\t\t\t\t\t<label>Password</label>\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\ttype='password'\r\n\t\t\t\t\t\t\tplaceholder='insert your password'\r\n\t\t\t\t\t\t\tname='password'\r\n\t\t\t\t\t\t\tvalue={userPass}\r\n\t\t\t\t\t\t\tonChange={handleInput}\r\n\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<button className='btn' type='submit'>\r\n\t\t\t\t\t\tSIGN IN\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</form>\r\n\t\t\t</div>\r\n\t\t</main>\r\n\t);\r\n};\r\n\r\nexport default SignPage;\r\n","import React, { useState } from 'react';\r\nimport { signInWithGoogle, logIn } from '../firebase/firebase.utils';\r\n\r\nimport './loginpage.style.css';\r\n\r\nconst LoginPage = ({ history }) => {\r\n\tconst [userEmail, setUserEmail] = useState('');\r\n\tconst [userPass, setUserPass] = useState('');\r\n\r\n\tconst handleInput = event => {\r\n\t\tevent.preventDefault();\r\n\t\tswitch (event.target.name) {\r\n\t\t\tcase 'email':\r\n\t\t\t\tsetUserEmail(event.target.value);\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'password':\r\n\t\t\t\tsetUserPass(event.target.value);\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tconsole.error('Something is wrong with the input');\r\n\t\t}\r\n\t};\r\n\r\n\tconst handleLogIn = async event => {\r\n\t\tevent.preventDefault();\r\n\t\ttry {\r\n\t\t\tawait logIn(userEmail, userPass);\r\n\t\t\thistory.push('/');\r\n\t\t} catch (error) {\r\n\t\t\talert('Credential are wrong');\r\n\t\t\tconsole.error('Error during sign-in: ', error.code, error.message);\r\n\t\t}\r\n\t};\r\n\r\n\tconst handleGoogleSignin = async () => {\r\n\t\ttry {\r\n\t\t\tawait signInWithGoogle();\r\n\t\t\thistory.push('/');\r\n\t\t} catch (error) {\r\n\t\t\talert('Something went wrong, try again!');\r\n\t\t\tconsole.error(\r\n\t\t\t\t'Error in Google signin: ',\r\n\t\t\t\terror.code,\r\n\t\t\t\terror.message,\r\n\t\t\t\terror.credentials\r\n\t\t\t);\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<main className='loginpage'>\r\n\t\t\t<div className='card flex-column'>\r\n\t\t\t\t<section className='option'>\r\n\t\t\t\t\t<h3>Login with your email and password</h3>\r\n\t\t\t\t\t<form onSubmit={handleLogIn}>\r\n\t\t\t\t\t\t<label>Email</label>\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\ttype='email'\r\n\t\t\t\t\t\t\tplaceholder='insert your email'\r\n\t\t\t\t\t\t\tname='email'\r\n\t\t\t\t\t\t\tvalue={userEmail}\r\n\t\t\t\t\t\t\tonChange={handleInput}\r\n\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<label>Password</label>\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\ttype='password'\r\n\t\t\t\t\t\t\tplaceholder='insert your password'\r\n\t\t\t\t\t\t\tname='password'\r\n\t\t\t\t\t\t\tvalue={userPass}\r\n\t\t\t\t\t\t\tonChange={handleInput}\r\n\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<button className='btn' type='submit'>\r\n\t\t\t\t\t\t\tLOG IN\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</form>\r\n\t\t\t\t</section>\r\n\r\n\t\t\t\t<hr />\r\n\r\n\t\t\t\t<section className='option'>\r\n\t\t\t\t\t<h3>Login with Google</h3>\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\tclassName='btn btn-google'\r\n\t\t\t\t\t\ttype='button'\r\n\t\t\t\t\t\tonClick={handleGoogleSignin}>\r\n\t\t\t\t\t\tLOG IN WITH GOOGLE\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</section>\r\n\t\t\t</div>\r\n\t\t</main>\r\n\t);\r\n};\r\n\r\nexport default LoginPage;\r\n","import React, { useState, useEffect } from 'react';\nimport { Redirect, Route, Switch } from 'react-router';\nimport { auth } from './firebase/firebase.utils';\nimport './App.css';\n\nimport Header from './components/header.component';\nimport ChatPage from './pages/chatpage.component';\nimport HomePage from './pages/homepage.component';\nimport SignPage from './pages/signpage.component';\nimport LoginPage from './pages/loginpage.component';\n\nfunction App() {\n\tconst [isLoggedIn, setIsLoggedIn] = useState(false);\n\tconst [userInfo, setUserInfo] = useState({ id: '', name: '' });\n\n\tuseEffect(() => {\n\t\tconst unsubFromAuth = auth.onAuthStateChanged(userAuth => {\n\t\t\tconsole.log('Auth state changed: ', userAuth);\n\t\t\tif (userAuth) {\n\t\t\t\tsetUserInfo({\n\t\t\t\t\tid: userAuth.uid,\n\t\t\t\t\tname: userAuth.displayName,\n\t\t\t\t});\n\t\t\t\tsetIsLoggedIn(true);\n\t\t\t} else {\n\t\t\t\tsetIsLoggedIn(false);\n\t\t\t\tsetUserInfo({ id: '', name: '' });\n\t\t\t}\n\t\t});\n\n\t\treturn () => unsubFromAuth();\n\t}, []);\n\n\treturn (\n\t\t<>\n\t\t\t<Header />\n\t\t\t<Switch>\n\t\t\t\t<Route exact path='/'>\n\t\t\t\t\t<HomePage isLoggedIn={isLoggedIn} />\n\t\t\t\t</Route>\n\t\t\t\t<Route path='/login' component={LoginPage} />\n\t\t\t\t<Route path='/signin' component={SignPage} />\n\t\t\t\t<Route path='/chat'>\n\t\t\t\t\t{isLoggedIn ? <ChatPage user={userInfo} /> : <Redirect to='/' />}\n\t\t\t\t</Route>\n\t\t\t\t<Route>\n\t\t\t\t\t<h2>404 Page Not Found</h2>\n\t\t\t\t</Route>\n\t\t\t</Switch>\n\t\t</>\n\t);\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport './index.css';\n\nimport App from './App';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<BrowserRouter basename='/TheChat_App'>\n\t\t\t<App />\n\t\t</BrowserRouter>\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n"],"sourceRoot":""}